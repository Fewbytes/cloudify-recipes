#!/usr/bin/env groovy
/*******************************************************************************
* Copyright (c) 2012 GigaSpaces Technologies Ltd. All rights reserved
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*       http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*******************************************************************************/
//TODO: wrap the below in a nice class hierarchy before compiling

class DebugHook {
    String keepaliveFilename = "/tmp/.cloudify_debugging"
    DebugHook() {}

    def debug_hook(String  arg , mode="instead") { return debug_hook([arg], mode) }
    def debug_hook(GString arg , mode="instead") { return debug_hook([arg.toString()], mode) }
    def debug_hook(Map     args, mode="instead") { //TODO: this is unsupported yet
        return args.inject([:]) {h, k ,v -> h[k] = debug_hook(v, mode); h }
    }

    //The main hook function
    def debug_hook(List args, mode="instead") { 
        prepare_debug_env(args.join(" "))
    
        File keepalive = new File(keepaliveFilename)
        keepalive.createNewFile()

        FileWriter fileWriter = new FileWriter(keepalive, true)
        fileWriter.write(
    """
    #set up the 'debug' alias to enter the debug shell
    if ! alias debug &>/dev/null ; then
        echo >>\$HOME/.bashrc 'echo A cloudify debug shell is available for you by typing \"debug\"';
        echo >>\$HOME/.bashrc 'alias debug=\"bash --rcfile \$HOME/debugrc\"';
    fi
    
    while [[ -f \$0 ]]; do
        echo A debug environment is ready on \$CLOUDIFY_AGENT_ENV_PUBLIC_IP.
        echo When finished, delete the file \$0 (or use the \'finish\' debug command)
        sleep 60
    done
    """)
        fileWriter.flush()
        fileWriter.close()
        return keepaliveFilename
    }

    def prepare_debug_env(debugTarget) {        
        def bash_commands = [
            [name:"run-script", comment:"Run the current script",
                command:'$CLOUDIFY_WORKDIR/$DEBUG_TARGET'],
            [name:"edit-script", comment:"Edit the current script",
                command:'vim $CLOUDIFY_WORKDIR/$DEBUG_TARGET'],
            [name:"launch-groovysh", comment:"Launch a groovy shell",
                command:'$HOME/gigaspaces/tools/groovy/bin/groovysh -q'],
            [name:"finish", comment:"Finish debugging (move on to the next lifecycle event)",
                command:'rm $KEEPALIVE_FILE'],
        ]

        def templateEngine = new groovy.text.SimpleTemplateEngine()

        def debugTemplate = (
'''
# Generated by the Cloudify debug subsystem
echo Loading the debug environment...

#the cloudify environment variables for this event:
<% System.getenv().grep{it =~ /^(CLOUDIFY|USM|LOOKUP)/}.each{
    println(\"export ${it.key}=\'${it.value}\'\")
} %>

export CLOUDIFY_WORKDIR=\\\$HOME/gigaspaces/work/processing-units/\\\${USM_APPLICATION_NAME}_\\\${USM_SERVICE_NAME}_\\\${USM_INSTANCE_ID}/ext
export DEBUG_TARGET=${debugTarget}
export KEEPALIVE_FILE=${keepaliveFile}

cd \\\$CLOUDIFY_WORKDIR
export JAVA_HOME=\\\$HOME/java
export CLASSPATH=`find \\\$HOME/gigaspaces/lib/{required,platform/cloudify} -name *.jar | paste -sd:`
export PATH=\\\$HOME/gigaspaces/tools/groovy/bin:\\\$PATH
chmod +x debug.groovy

#the bash command aliases:
<% bashCommands.each{
    println("alias ${it.name}=\'${it.command}\'")
} %>

#set up shortcut aliases
if [[ ! -f debug_commands ]] ; then
    (./debug.groovy | tail -n+2 >debug_commands)
    <% bashCommands.each{
        println("echo \'       ${it.name} ${it.comment}\' >debug_commands")
    } %>
fi

for COMMAND in `grep -Eo \'\\\\-\\\\-[^ ]*\' debug_commands | cut -c3- `; do
    alias \\\$COMMAND=\"\\\$CLOUDIFY_WORKDIR/debug.groovy --\\\$COMMAND\"
done
#some special treatment for the help alias
alias help=\"cut -c7- <\\\$CLOUDIFY_WORKDIR/debug_commands\"

clear
PS1=\"Debugging[\\\$DEBUG_TARGET]: \"
echo Starting a debugging session for hook \\\$DEBUG_TARGET
echo These are the available debug commands:
help
echo
''')
    
        def preparedTemplate = templateEngine.createTemplate(debugTemplate).make(
            [debugTarget: debugTarget,
             keepaliveFile: keepaliveFilename,
             bashCommands: bash_commands,
        ])
        def targetDebugrc = new File(System.properties["user.home"] +"/.debugrc")
        targetDebugrc.withWriter() {it.write(preparedTemplate)}

//        //set up the "debug" alias to enter the debug shell
//        def bashrc = new File(System.properties["user.home"] +"/.bashrc")
//        if (! bashrc.getText() =~ /alias debug/) {
//            FileWriter fileWriter = new FileWriter(bashrc, true)
//            fileWriter.write(
//    """echo 'A cloudify debug shell is available for you by typing "debug"'
//    alias debug="bash --rcfile \$HOME/debugrc"
//    """)
//            fileWriter.flush()
//            fileWriter.close()
//        }
    }
}